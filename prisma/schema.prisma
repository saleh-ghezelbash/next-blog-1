generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model category {
  id         BigInt   @id(map: "Category_pkey") @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  name       String?
  name_fa    String?
  post       post[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model comment {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime  @default(now()) @db.Timestamptz(6)
  user_id       BigInt?
  post_id       BigInt?
  body          String?
  parent_id     BigInt?
  comment       comment?  @relation("commentTocomment", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_comment comment[] @relation("commentTocomment")
  post          post?     @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model like {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  user_id    BigInt?
  post_id    BigInt?
  post       post?    @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model post {
  id          BigInt     @id @default(autoincrement())
  created_at  DateTime   @default(now()) @db.Timestamptz(6)
  title       String?    @unique
  body        String?
  image       String?
  category_id BigInt?
  user_id     BigInt?
  comment     comment[]
  like        like[]
  category    category?  @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  post_tag    post_tag[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model post_tag {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  post_id    BigInt?
  tag_id     BigInt?
  post       post?    @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tag        tag?     @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tag {
  id         BigInt     @id(map: "Tag_pkey") @default(autoincrement())
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  name       String?    @unique(map: "Tag_name_key")
  post_tag   post_tag[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  username   String?   @unique
  password   String?
  bio        String?
  avatar     String?
  name       String?
  comment    comment[]
  like       like[]
  post       post[]
}
